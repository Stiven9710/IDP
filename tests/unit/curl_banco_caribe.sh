#!/bin/bash
# Script para probar la API IDP con el documento de Banco Caribe
# Usa la configuraci√≥n de test_banco_caribe_config.json

echo "üöÄ PROBANDO API IDP - DOCUMENTO BANCO CARIBE"
echo "=============================================="

# Configuraci√≥n del documento
DOCUMENT_PATH="tests/Documentos/Banco Caribe - Propuesta Perfil Transaccional IB Final.pptx"
API_URL="http://159.203.149.247:8000/api/v1/documents/process-upload"

# Verificar que el documento existe
if [ ! -f "$DOCUMENT_PATH" ]; then
    echo "‚ùå Error: Documento no encontrado en $DOCUMENT_PATH"
    exit 1
fi

echo "üìÑ Documento: $DOCUMENT_PATH"
echo "üåê API URL: $API_URL"
echo ""

# Campos a extraer (convertidos a JSON string)
FIELDS_CONFIG='[
  {
    "name": "nombre_propuesta",
    "type": "string",
    "description": "El nombre completo de la propuesta o proyecto. Busca en el t√≠tulo principal y encabezados del documento."
  },
  {
    "name": "resumen_propuesta",
    "type": "string",
    "description": "Un resumen ejecutivo de la propuesta en m√°ximo 30 palabras. Busca en: res√∫menes ejecutivos, introducciones, objetivos del proyecto, descripci√≥n general. Si no hay un resumen expl√≠cito, crea uno basado en el contenido del documento."
  },
  {
    "name": "tecnologia_implementar",
    "type": "string",
    "description": "Las tecnolog√≠as principales que se van a implementar. Busca en: secciones t√©cnicas, arquitectura, especificaciones del proyecto, stack tecnol√≥gico, herramientas, plataformas, frameworks, bases de datos, APIs, servicios en la nube. Lista todas las tecnolog√≠as mencionadas separadas por comas."
  },
  {
    "name": "requisitos_infraestructura_software",
    "type": "array",
    "description": "Lista de requisitos de infraestructura de software. Busca en: secciones de infraestructura, requisitos t√©cnicos, especificaciones del sistema, hardware, software, servidores, bases de datos, redes, seguridad. Cada elemento debe tener 'descripcion' y 'cantidad'. Si no hay cantidades espec√≠ficas, estima bas√°ndote en el contexto del proyecto."
  },
  {
    "name": "total_horas",
    "type": "number",
    "description": "El total de horas estimadas para el proyecto. Busca en: cronogramas, estimaciones de tiempo, res√∫menes ejecutivos, planificaci√≥n del proyecto, recursos humanos, esfuerzo estimado, duraci√≥n del proyecto. Si no hay un total expl√≠cito, suma todas las horas mencionadas en el documento o estima bas√°ndote en la complejidad descrita."
  }
]'

# Prompt general
PROMPT_GENERAL="Act√∫a como un analista de propuestas t√©cnicas experto en banca. Tu tarea es extraer informaci√≥n espec√≠fica de esta propuesta de Banco Caribe. IMPORTANTE: Debes analizar TODO el documento p√°gina por p√°gina para encontrar la informaci√≥n solicitada. NO devuelvas null a menos que est√©s 100% seguro de que el campo no existe en ninguna parte del documento. Para cada campo: 1) Busca en TODAS las p√°ginas, 2) Si encuentras informaci√≥n parcial, extrae lo que puedas, 3) Si no encuentras nada despu√©s de revisar todo, entonces devuelve null. Para cantidades, extrae solo el valor num√©rico. Para arrays, extrae cada elemento con descripci√≥n y cantidad. REVISA CADA P√ÅGINA METICULOSAMENTE."

# Modo de procesamiento
PROCESSING_MODE="gpt_vision_only"

echo "üìã Configuraci√≥n:"
echo "   üéØ Modo: $PROCESSING_MODE"
echo "   üìù Prompt: ${PROMPT_GENERAL:0:100}..."
echo "   üîç Campos: 5"
echo ""

# Ejecutar curl
echo "üåê Ejecutando API..."
echo ""

curl -X POST "$API_URL" \
  -H "Content-Type: multipart/form-data" \
  -F "file=@$DOCUMENT_PATH" \
  -F "fields_config=$FIELDS_CONFIG" \
  -F "prompt_general=$PROMPT_GENERAL" \
  -F "processing_mode=$PROCESSING_MODE" \
  -w "\n\nüìä Resumen de la respuesta:\n   Status: %{http_code}\n   Tiempo: %{time_total}s\n   Tama√±o: %{size_download} bytes\n" \
  -s

echo ""
echo "‚úÖ Comando curl ejecutado"
echo ""
echo "üí° Para monitorear el procesamiento:"
echo "   ‚Ä¢ Ver logs del worker: tail -f worker.log"
echo "   ‚Ä¢ Ver logs de la API: tail -f api.log"
echo "   ‚Ä¢ Verificar estado: curl http://159.203.149.247:8000/api/v1/health/storage"
echo "   ‚Ä¢ Verificar jobs: curl http://159.203.149.247:8000/api/v1/jobs/"

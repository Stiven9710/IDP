server {
    listen 80;
    server_name n8n.example.com;

    # Redirigir todo el tráfico HTTP a HTTPS
    location / {
        return 301 https://n8n.example.com;
    }
}

server {
    listen 443 ssl;
    server_name n8n.example.com;

    # Rutas a los certificados que estarán DENTRO del contenedor
    ssl_certificate /etc/nginx/certs/self-signed.crt;
    ssl_certificate_key /etc/nginx/certs/self-signed.key;

    location / {
        proxy_pass http://n8n.example.com:5678; # n8n es el nombre del servicio en docker-compose
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Habilitar WebSockets para una comunicación fluida con la UI de n8n
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}